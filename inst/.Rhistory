library(lavaan)]
install.packages('lavaan')
library(lavaan)
data('HolzingerSwineford1939')
str(HolzingerSwineford1939)
install.packages('reticulate')
#importing required Python libraries/modules
sns <- import('seaborn')
#importing required Python libraries/modules
sns <- import('seaborn')
#loading required R libraries
library(reticulate) #the superpower bridges python and R
#importing required Python libraries/modules
sns <- import('seaborn')
sns$pairplot(HolzingerSwineford1939)
#display the plot
plt$show()
#loading required R libraries
library(reticulate) #the superpower bridges python and R
#display the plot
plt$show()
plt <- import('matplotlib.pyplot')
#display the plot
plt$show()
plot(HolzingerSwineford1939)
if (!require(devtools))
install.packages("devtools")
devtools::install_github("rstudio/leaflet")
shiny::runGitHub("rstudio/shiny-examples", subdir="063-superzip-example")
shiny::runGitHub("rstudio/shiny-examples", subdir="063-superzip-example")
runApp('Documents/mourafinder')
runApp('Documents/mourafinder')
runApp('Documents/mourafinder')
runApp('Documents/mourafinder')
runApp('Documents/mourafinder')
runApp('Documents/mourafinder')
install.packages('RSelenium')
library(RSelenium)
RSelenium::checkForServer()
RSelenium::rsDriver()
RSelenium::java_check()
java_check()
java_check()
X = matrix(rep(seq(-1.4, 1.4, length=n), n), nrow=n, byrow=F)
n = 800
X = matrix(rep(seq(-1.4, 1.4, length=n), n), nrow=n, byrow=F)
X
X = matrix(rep(seq(-1.4, 1.4, length=n), n), nrow=n, byrow=F)
Y = matrix(rep(seq(0, -2.5, length=n), n), nrow=n, byrow=T)
install.packages("scatterplot3d")
require(scatterplot3d)
#Set plot points
x = seq(-10, 10, length= 100)
y = x
fr = function(x, y) { r = sqrt(x^2+y^2); 10 * sin(r)/r }
z = outer(x, y, fr)
z[is.na(z)] = 1
#Plot using scatterplot 3d
X = expand.grid(x,y)
x = X[,1]
y = X[,2]
z = c(z)
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot")
#Set plot points
x = seq(-10, 10, length= 100)
x
y = x
y
fr = function(x, y) { r = sqrt(x^2+y^2); 10 * sin(r)/r }
z = outer(x, y, fr)
z
z[is.na(z)] = 1
X
#Plot using scatterplot 3d
X = expand.grid(x,y)
X
x = X[,1]
y = X[,2]
z = c(z)
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot")
#Set plot points
x = seq(-1.4, 1.4, length=n)
x
y = seq(0, -2.5, length=n)
y
#Set plot points
x = seq(-1.4, 1.4, length=n)
y = seq(0, -2.5, length=n)
fr = function(x, y) {return(abs(X*Y)/2 - 3*a*X^2/4 - 4*a*Y^2/7 - a*Y) }
z = outer(x, y, fr)
#Set plot points
x = seq(-1.4, 1.4, length=n)
y = seq(0, -2.5, length=n)
fr = function(x, y) {return(abs(X*Y)/2 - 3*X^2/4 - 4*Y^2/7 - Y) }
z = outer(x, y, fr)
z
z = outer(x, y, fr)
y
x
y
x
z = outer(x, y, fr)
fr = function(x, y) {return(abs(X*Y)/2 - 3*X^2/4 - 4*Y^2/7 - Y) }
#Set plot points
x <- seq(-1.4, 1.4, length=n)
y <- seq(0, -2.5, length=n)
f <-  function(x, y) {return(abs(X*Y)/2 - 3*X^2/4 - 4*Y^2/7 - Y) }
f
#Set plot points
x <- seq(-1.4, 1.4, length=n)
y <- seq(0, -2.5, length=n)
f <-  function(x, y) {return(abs(x*y)/2 - 3*x^2/4 - 4*y^2/7 - y) }
f
z = outer(x, y, fr)
f <-  function(x, y) {return(abs(x*y)/2 - 3*x^2/4 - 4*y^2/7 - y) }
f(1,1)
f(10,10)
f(-10,10)
f(-10,-10)
z = outer(x, y, f)
z
z[is.na(z)] = 1
#Plot using scatterplot 3d
X = expand.grid(x,y)
x = X[,1]
y = X[,2]
z = c(z)
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot")
x
n
n  = 100
#Set plot points
x <- seq(-1.4, 1.4, length=n)
x
y <- seq(0, -2.5, length=n)
f <-  function(x, y) {return(abs(x*y)/2 - 3*x^2/4 - 4*y^2/7 - y) }
z = outer(x, y, f)
z
z[is.na(z)] = 1
#Plot using scatterplot 3d
X = expand.grid(x,y)
x = X[,1]
y = X[,2]
z = c(z)
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot")
f <-  function(x, y){
z  = abs(x*y)/2 - 3*x^2/4 - 4*y^2/7 - y
if(z <= 0 ) z = NA
return(z)
}
z = outer(x, y, f)
z[is.na(z)] = 1
#Set plot points
x <- seq(-1.4, 1.4, length=n)
y <- seq(0, -2.5, length=n)
f <-  function(x, y){
z  = abs(x*y)/2 - 3*x^2/4 - 4*y^2/7 - y
if(z < 0 ) return(NA)
return(z)
}
z = outer(x, y, f)
#Set plot points
x <- seq(-1.4, 1.4, length=n)
y <- seq(0, -2.5, length=n)
f <-  function(x, y){
z  = abs(x*y)/2 - 3*x^2/4 - 4*y^2/7 - y
return(z)
}
z = outer(x, y, f)
z
z<0
z[z<0] = 1
z
#Plot using scatterplot 3d
X = expand.grid(x,y)
x = X[,1]
y = X[,2]
z = c(z)
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot")
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot", col.axis = 2)
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot", col.axis = "white")
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot", col.grid = 2)
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot", col.lab = 2)
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot", col.lab = 2, color = 2)
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot", col.lab = 2, highlight.3d = TRUE)
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot", col.lab = 2, highlight.3d = TRUE, angle = 90 )
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot", col.lab = 2, highlight.3d = TRUE, angle = 90)
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot", col.lab = 2, highlight.3d = TRUE)
scatterplot3d(x,y,z,color="lightblue",pch=21,main="3-D Scatter Plot", highlight.3d = TRUE)
scatterplot3d(x,y,z, color="red",pch=21,main="3-D Scatter Plot")
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico")
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!")
install.packages("scatterplot3d")
require(scatterplot3d)
n  = 100
#Set plot points
x <- seq(-1.4, 1.4, length=n)
y <- seq(0, -2.5, length=n)
f <-  function(x, y){
z  = abs(x*y)/2 - 3*x^2/4 - 4*y^2/7 - y
return(z)
}
z = outer(x, y, f)
z[z<0] = 1
#Plot using scatterplot 3d
X = expand.grid(x,y)
x = X[,1]
y = X[,2]
z = c(z)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!")
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = 90)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = 180)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = 45)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = 360)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = 270)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = 10)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = 20)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = -90)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = -180)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = -360)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = -10)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = -20)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = -30)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = -60)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = -90, )
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = -180, )
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", angle = -90, )
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F, tick.marks = T)
scatterplot3d(z, x,y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F)
scatterplot3d(y, x,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F)
scatterplot3d(y,x,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F, angle = 180)
scatterplot3d(y,x,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F, angle = 90)
scatterplot3d(y,x,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F, angle = -90)
scatterplot3d(y,x,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F, angle = 90)
scatterplot3d(y,x,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F, angle = -270)
scatterplot3d(y,x,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F, angle = -270)
scatterplot3d(y,x,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F, angle = 270)
scatterplot3d(y,x,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F, angle = 10)
scatterplot3d(y,x,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F, angle = 20)
scatterplot3d(y,x,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F, angle = 30)
scatterplot3d(y,x,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F, angle = 50)
scatterplot3d(y,x,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = F)
scatterplot3d(x,y,z, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T)
scatterplot3d(x,z,y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T)
scatterplot3d(x,z,y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T, angle = 90)
scatterplot3d(x,z,y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T, angle =180)
scatterplot3d(x,z,y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T, angle =270)
scatterplot3d(x,z,y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T, angle =-180)
scatterplot3d(x,z,y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T, angle =-09)
scatterplot3d(x,z,y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T, angle =-90)
scatterplot3d(x,z,y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T)
scatterplot3d(x,z,-y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T)
#Set plot points
x <- seq(-1.4, 1.4, length=n)
y <- seq(0, -2.5, length=n)
f <-  function(x, y){
z  = abs(x*y)/2 - 3*x^2/4 + 4*y^2/7 + y
return(z)
}
z = outer(x, y, f)
z[z<0] = 1
#Plot using scatterplot 3d
X = expand.grid(x,y)
x = X[,1]
y = X[,2]
z = c(z)
scatterplot3d(x,z,-y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T)
install.packages("scatterplot3d")
require(scatterplot3d)
n  = 100
#Set plot points
x <- seq(-1.4, 1.4, length=n)
y <- seq(0, -2.5, length=n)
f <-  function(x, y){
z  = abs(x*y)/2 - 3*x^2/4 - 4*y^2/7 - y
return(z)
}
z = outer(x, y, f)
z[z<0] = 1
#Plot using scatterplot 3d
X = expand.grid(x,y)
x = X[,1]
y = X[,2]
z = c(z)
scatterplot3d(x,z,-y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T)
# install.packages("scatterplot3d")
require(scatterplot3d)
n  = 100
#Set plot points
x <- seq(-1.4, 1.4, length=n)
y <- seq(0, -2.5, length=n)
f <-  function(x, y){
z  = abs(x*y)/2 - 3*x^2/4 - 4*y^2/7 + y
return(z)
}
z = outer(x, y, f)
z[z<0] = 1
#Plot using scatterplot 3d
X = expand.grid(x,y)
x = X[,1]
y = X[,2]
z = c(z)
scatterplot3d(x,z,-y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T)
scatterplot3d(x,z,y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T)
install.packages("scatterplot3d")
n  = 100
install.packages("scatterplot3d")
n  = 100
#Set plot points
x <- seq(-1.4, 1.4, length=n)
y <- seq(0, -2.5, length=n)
f <-  function(x, y){
z  = abs(x*y)/2 - 3*x^2/4 - 4*y^2/7 - y
return(z)
}
z = outer(x, y, f)
z[z<0] = 1
#Plot using scatterplot 3d
X = expand.grid(x,y)
x = X[,1]
y = X[,2]
z = c(z)
scatterplot3d(x,z,y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T)
# install.packages("scatterplot3d")
require(scatterplot3d)
n  = 100
#Set plot points
x <- seq(-1.4, 1.4, length=n)
y <- seq(0, -2.5, length=n)
f <-  function(x, y){
z  = abs(x*y)/2 - 3*x^2/4 - 4*y^2/7 - y
return(z)
}
z = outer(x, y, f)
z[z<0] = 1
#Plot using scatterplot 3d
X = expand.grid(x,y)
x = X[,1]
y = X[,2]
z = c(z)
scatterplot3d(x,z,y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T)
scatterplot3d(x,z,-y, color="red",pch=21,main="Feliz dia do Estatístico!", axis = T)
citation(stats)
citation('stats')
setwd("~/Documents/spsurv/inst")
library(survival)
data('larynx')
library('KMsurv')
data('larynx')
str(larynx)
??larynx
Surv(larynx$time,larynx$delta)
rm(list = ls(all = T))
options(scipen = 9999)
require(spsurv)
citation('spsurv')
data('larynx')
View(larynx)
library(xtable)
xtable(larynx)
Surv(larynx$time,larynx$delta)
View(Surv(larynx$time,larynx$delta))
