spbp(formula = status ~ status + karno + factor(celltype),
data = veteran)
spbp(formula = Surv(time, status) ~ karno + factor(celltype),
data = veteran)
spbp(formula = Surv(time, status) ~ status + factor(celltype),
data = veteran)
install.packages(c("covr", "devtools", "usethis"))
covr::codecov(token = "5ac8c633-0916-4cdc-9b1f-7391b8dafe7f")
setwd("~/Documents/spsurv")
covr::codecov(token = "5ac8c633-0916-4cdc-9b1f-7391b8dafe7f")
?spsurv
setwd("~/Documents/spsurv")
usethis::use_github_links()
usethis::use_github_action_check_release()
use_github_action_check_release()
library("dplyr")
install.packages("dplyr")
library("usethis")
use_github_action_check_release
?use_github_action_check_release
usethis::use_github_action_check_release()
devtools::install_github("r-lib/usethis")
usethis::use_github_action_check_release()
usethis::use_github_action_check_release()
usethis:::use_github_action_check_release()
devtools::install_github("r-lib/usethis", force = T)
usethis::use_github_action_check_release()
usethis::use_github_action_check_full()
library(usethis)
use_github_actions()
use_github_actions_tidy()
usethis::use_github_action_check_release()
covr::codecov(token = "5ac8c633-0916-4cdc-9b1f-7391b8dafe7f")
## PH model
bpph(Surv(time, status)~karno+factor(celltype),  data = veteran)## PO model
library(spsurv)
data("veteran")
## PH model
bpph(Surv(time, status)~karno+factor(celltype),  data = veteran)## PO model
bpph(Surv(time, status)~karno+factor(celltype), approach = "bayes",  data = veteran,
iter = 1000, chains = 1, cores = 1)## PH model
print(bpph)
print(bpph)
class(bpph)
## PH model
ph_fit <- bpph(Surv(time, status)~karno+factor(celltype),  data = veteran)## PO model
ph_fit <- bpph(Surv(time, status)~karno+factor(celltype), approach = "bayes",  data = veteran,
iter = 10, chains = 1, cores = 1)## PH model
print(ph_fit)
summary(ph_fit)
## PO model
po_fit <- bppo(Surv(time, status)~karno+factor(celltype),  data = veteran)## PO model
## PO model
po_fit <- bppo(Surv(time, status)~karno+factor(celltype),  data = veteran)## PO model
po_fit <- bppo(Surv(time, status)~karno+factor(celltype),  approach = "bayes",  data = veteran,
iter = 10, chains = 1, cores = 1)## PO model
print(po_fit)
summary(po_fit)
## AFT model
aft_fit <- bpaft(Surv(time, status)~karno+factor(celltype),  data = veteran)## AFT model
aft_fit <- bpaft(Surv(time, status)~karno+factor(celltype),  approach = "bayes",  data = veteran,
iter = 10, chains = 1, cores = 1)## PO model
print(aft_fit)
summary(aft_fit)
#---- handlers.R ----
spbp(formula = Surv(time, status) ~ karno + factor(celltype),
degree = 1/2,
data = veteran)
spbp(formula = Surv(time, status) ~ karno + factor(celltype),
data = veteran, chaind = 1)
spbp(formula = Surv(time, status) ~ karno + factor(celltype),
data = NULL)
spbp(formula = status ~ karno + factor(celltype),
data = veteran)
# ML approach:
fit <- spbp(Surv(time, status)~karno+factor(celltype),
approach = "mle",  data = veteran)
summary(fit)
vcov(fit)
coef(fit)
model.matrix(fit)
print(fit)
# Bayesian approach:
fit2 <- spbp(Surv(time, status) ~ karno + factor(celltype),
approach = "bayes",  data = veteran, chains = 1, iter = 1000, cores = 1)
print(fit2)
summary(fit2)
# Bayesian approach:
fit2 <- spbp(Surv(time, status) ~ karno + factor(celltype),
approach = "bayes",  data = veteran, chains = 1, iter = 10, cores = 1)
print(fit2)
summary(fit2)
# vcov(fit2)
# coef(fit2)
model.matrix(fit2)
stan_dens(fit2)
traceplot(fit2)
extract(fit2)
covr::codecov(token = "5ac8c633-0916-4cdc-9b1f-7391b8dafe7f")
install.packages("hexSticker")
install.packages("magick")
install.packages("magick")
install.packages("hexSticker")
s <- sticker(~plot(cars, cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab=""),
package="spsurv", p_size=20, s_x=.8, s_y=.6, s_width=1.4, s_height=1.2,
filename="inst/figures/baseplot.png")
library("hexSticker")
s <- sticker(~plot(cars, cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab=""),
package="spsurv", p_size=20, s_x=.8, s_y=.6, s_width=1.4, s_height=1.2,
filename="inst/figures/baseplot.png")
~plot(cars, cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab="")
plot(s)
s <- sticker(~plot(cars, cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab=""),
package="spsurv", p_size=20, s_x=.8, s_y=.6, s_width=1.4, s_height=1.2,
filename="inst/figures/baseplot.png")
plot(s)
vignette("spsurv")
plot(breslowsurv, bty = "n", lwd = 3, main = "77 years old patient survival per Stage")
spbpsurv <- spsurv::survivor(fit, newdata = newdata)
newdata <-  data.frame(age =c(77,77,77,77), stage = c(1,2,3,4))
spbpsurv <- spsurv::survivor(fit, newdata = newdata)
fit <- spsurv::spbp(Surv(time, delta)~age + factor(stage),
approach = "bayes",  data = larynx,
iter = 2000, chains = 1, warmup = 1000, cores = 1)
library("KMsurv")
data("larynx")
install.packages("KMsurv")
data("larynx")
data("larynx")
library("KMsurv")
data("larynx")
fit <- spsurv::spbp(Surv(time, delta)~age + factor(stage),
approach = "bayes",  data = larynx,
iter = 2000, chains = 1, warmup = 1000, cores = 1)
newdata <-  data.frame(age =c(77,77,77,77), stage = c(1,2,3,4))
spbpsurv <- spsurv::survivor(fit, newdata = newdata)
lines(spbpsurv$time, spbpsurv$survival1, col = 1, pch = 23)
plot(spbpsurv$time, spbpsurv$survival1, col = 1, pch = 23, type = 'l')
lines(spbpsurv$time, spbpsurv$survival2, col = 2, pch = 23)
lines(spbpsurv$time, spbpsurv$survival3, col = 3, pch = 23)
lines(spbpsurv$time, spbpsurv$survival4, col = 4, pch = 23)
plot(spbpsurv$time, spbpsurv$survival1, col = 1, pch = 23, type = 'l', ylim = c(0,1))
lines(spbpsurv$time, spbpsurv$survival2, col = 2, pch = 23)
lines(spbpsurv$time, spbpsurv$survival3, col = 3, pch = 23)
lines(spbpsurv$time, spbpsurv$survival4, col = 4, pch = 23)
plot(spbpsurv$time, spbpsurv$survival1, col = 1, pch = 23, type = 'l', ylim = c(0,1), lwd = 3)
plot(spbpsurv$time, spbpsurv$survival1, col = 1, pch = 23, type = 'l', ylim = c(0,1), lwd = 3, bty = "n")
plot(spbpsurv$time, spbpsurv$survival1, col = 1, pch = 23, type = 'l', ylim = c(0,1), lwd = 3, bty = "n", ylab = "", xlab = "")
plot(spbpsurv$time, spbpsurv$survival1, col = 1, pch = 23, type = 'l', ylim = c(0,1), lwd = 3, bty = "n", ylab = "", xlab = "")
lines(spbpsurv$time, spbpsurv$survival2, col = 2, pch = 23)
lines(spbpsurv$time, spbpsurv$survival2, col = 2, pch = 23, lwd = 3)
install.packages("viridis")
dev.off()
library(viridis)
### ------------------------------------------------
# b_{0,4}(x) &= (1-x)^{4},\\
# b_{1,4}(x) &= 4 x(1-x)^{3},   & \quad
# b_{2,4}(x) &= 6 x^2(1-x)^{2}, \\
# b_{3,4}(x) &= 4 x^3(1-x) & \quad
# b_{4,4}(x) &= x^4.
m <- 10; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
p <- recordPlot()
p
p
s <- sticker(p,
package="spsurv", p_size=20, s_x=.8, s_y=.6, s_width=1.4, s_height=1.2,
filename="inst/figures/baseplot.png")
s <- sticker(p,
package="spsurv", p_size=20, s_x=.8, s_y=.6, s_width=1.4, s_height=1.2,
filename="inst/figures/baseplot.png")
as.grob
as.grob
?as.grob
grid.echo()
## grab the scene as a grid object
library(gridGraphics)
library(grid)
grid.echo()
a <- grid.grab()
install.packages("gridGraphics")
install.packages("gridGraphics")
install.packages("grid")
library(gridGraphics)
library(grid)
p
grid.echo()
a <- grid.grab()
a
a
s <- sticker(a,
package="spsurv", p_size=20, s_x=.8, s_y=.6, s_width=1.4, s_height=1.2,
filename="inst/figures/baseplot.png")
s
### ------------------------------------------------
# b_{0,4}(x) &= (1-x)^{4},\\
# b_{1,4}(x) &= 4 x(1-x)^{3},   & \quad
# b_{2,4}(x) &= 6 x^2(1-x)^{2}, \\
# b_{3,4}(x) &= 4 x^3(1-x) & \quad
# b_{4,4}(x) &= x^4.
m <- 10; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
install.packages("showtext")
library(showtext)
## Loading Google fonts (http://www.google.com/fonts)
font_add_google("Gochi Hand", "gochi")
## Automatically use showtext to render text for future devices
showtext_auto()
showtext.auto()
showtext_auto()
library(showtext)
## Loading Google fonts (http://www.google.com/fonts)
font_add_google("Amatic SC", "ASC")
s <- sticker(a,
package="spsurv", p_size=20, s_x=.8, s_y=.6, s_width=1.4, s_height=1.2,
filename="inst/figures/baseplot.png", p_family = "ASC")
plot(s)
### ------------------------------------------------
# b_{0,4}(x) &= (1-x)^{4},\\
# b_{1,4}(x) &= 4 x(1-x)^{3},   & \quad
# b_{2,4}(x) &= 6 x^2(1-x)^{2}, \\
# b_{3,4}(x) &= 4 x^3(1-x) & \quad
# b_{4,4}(x) &= x^4.
library(ggplot2)
ggplot(data.frame(x=c(0, 10)), aes(x)) +
stat_function(fun=function(x) sin(x) + log(x))
ggplot(data.frame(x=c(0, 10)), aes(x), cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab="") +
stat_function(fun=function(x) sin(x) + log(x))
ggplot(data.frame(x=c(0, 10)), aes(x), cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab="") +
stat_function(fun=function(x) sin(x) + log(x))
~plot(cars, cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab="")
plot(cars, cex=.5, cex.axis=.5, mgp=c(0,.3,0), xlab="", ylab="")
### ------------------------------------------------
# b_{0,4}(x) &= (1-x)^{4},\\
# b_{1,4}(x) &= 4 x(1-x)^{3},   & \quad
# b_{2,4}(x) &= 6 x^2(1-x)^{2}, \\
# b_{3,4}(x) &= 4 x^3(1-x) & \quad
# b_{4,4}(x) &= x^4.
m <- 10; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
~m <- 10; tau <- 1; k <- 0
### ------------------------------------------------
# b_{0,4}(x) &= (1-x)^{4},\\
# b_{1,4}(x) &= 4 x(1-x)^{3},   & \quad
# b_{2,4}(x) &= 6 x^2(1-x)^{2}, \\
# b_{3,4}(x) &= 4 x^3(1-x) & \quad
# b_{4,4}(x) &= x^4.
m <- 10; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
p <- recordPlot()
p # redraw
p # redraw
library(gridGraphics)
library(grid)
grid.echo()
a <- grid.grab()
grid.newpage()
a <- editGrob(a, vp=viewport(width=unit(2,"in")), gp=gpar(fontsize=10))
grid.draw(a)
s <- sticker(a,
package="spsurv", p_size=20, s_x=.8, s_y=.6, s_width=1.4, s_height=1.2,
filename="inst/figures/baseplot.png", p_family = "ASC")
plot(s)
a
imgurl <- system.file("figures/bp.png", package="spsurv")
sticker(imgurl, package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,
filename="inst/figures/imgfile.png", p_family = "ASC")
imgurl
imgurl <- system.file("figures/bp.png", package="spsurv")
imgurl
getwd()
imgurl <- system.file("inst/figures/bp.png", package="spsurv")
imgurl
imgurl <- system.file("inst/figures/bp.png", package="spsurv")
imgurl <- system.file("inst/figures/bp.png", package="spsurv")
sticker(imgurl, package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,
filename="inst/figures/imgfile.png", p_family = "ASC")
imgurl <- system.file("inst/figures/bp.png")
imgurl
sticker(imgurl, package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,
filename="inst/figures/imgfile.png", p_family = "ASC")
imgurl <- system.file("inst/figures/bp.png", package="hexSticker")
imgurl
sticker(imgurl, package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,        h_fill="#f9690e", h_color="#f39c12",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,        h_fill="#f9690e", h_color="#f39c12",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,        h_fill="#f9690e", h_color="#f39c12",
filename="inst/figures/imgfile.png", p_family = "ASC")
viridis(10)
viridis(10)[1]
viridis(10)[10]
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#FDE725FF", h_color="#440154FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#440154FF", h_color="#FDE725FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#440154FF", h_color="#FDE725FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5, bg = NA)
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5, bg = NA)
plot(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5, bg = NA)
plot( bg = NA)
plot( NA, bg = NA)
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5, add = T)
plot( NA, bg = NA)
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5, add = T)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5, add = T)
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
# axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
### ------------------------------------------------
# b_{0,4}(x) &= (1-x)^{4},\\
# b_{1,4}(x) &= 4 x(1-x)^{3},   & \quad
# b_{2,4}(x) &= 6 x^2(1-x)^{2}, \\
# b_{3,4}(x) &= 4 x^3(1-x) & \quad
# b_{4,4}(x) &= x^4.
m <- 10; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
### ------------------------------------------------
# b_{0,4}(x) &= (1-x)^{4},\\
# b_{1,4}(x) &= 4 x(1-x)^{3},   & \quad
# b_{2,4}(x) &= 6 x^2(1-x)^{2}, \\
# b_{3,4}(x) &= 4 x^3(1-x) & \quad
# b_{4,4}(x) &= x^4.
m <- 10; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
# axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
### ------------------------------------------------
# b_{0,4}(x) &= (1-x)^{4},\\
# b_{1,4}(x) &= 4 x(1-x)^{3},   & \quad
# b_{2,4}(x) &= 6 x^2(1-x)^{2}, \\
# b_{3,4}(x) &= 4 x^3(1-x) & \quad
# b_{4,4}(x) &= x^4.
m <- 10; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
plot.new()
par(bg=NA)
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
### ------------------------------------------------
# b_{0,4}(x) &= (1-x)^{4},\\
# b_{1,4}(x) &= 4 x(1-x)^{3},   & \quad
# b_{2,4}(x) &= 6 x^2(1-x)^{2}, \\
# b_{3,4}(x) &= 4 x^3(1-x) & \quad
# b_{4,4}(x) &= x^4.
m <- 10; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
p <- recordPlot()
### ------------------------------------------------
# b_{0,4}(x) &= (1-x)^{4},\\
# b_{1,4}(x) &= 4 x(1-x)^{3},   & \quad
# b_{2,4}(x) &= 6 x^2(1-x)^{2}, \\
# b_{3,4}(x) &= 4 x^3(1-x) & \quad
# b_{4,4}(x) &= x^4.
par(bg=NA)
m <- 10; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#440154FF", h_color="#FDE725FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#440154FF", h_color="#FDE725FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
### ------------------------------------------------
# b_{0,4}(x) &= (1-x)^{4},\\
# b_{1,4}(x) &= 4 x(1-x)^{3},   & \quad
# b_{2,4}(x) &= 6 x^2(1-x)^{2}, \\
# b_{3,4}(x) &= 4 x^3(1-x) & \quad
# b_{4,4}(x) &= x^4.
par(bg=NA)
m <- 10; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
library(gridGraphics)
library(grid)
grid.echo()
a <- grid.grab()
a
grid.newpage()
a <- editGrob(a, vp=viewport(width=unit(2,"in")), gp=gpar(fontsize=10))
grid.draw(a)
grid.newpage()
a <- editGrob(a, vp=viewport(width=unit(2,"in")), gp=gpar(fontsize=10))
grid.draw(a)
### ------------------------------------------------
# b_{0,4}(x) &= (1-x)^{4},\\
# b_{1,4}(x) &= 4 x(1-x)^{3},   & \quad
# b_{2,4}(x) &= 6 x^2(1-x)^{2}, \\
# b_{3,4}(x) &= 4 x^3(1-x) & \quad
# b_{4,4}(x) &= x^4.
par(bg=NA)
m <- 10; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
### ------------------------------------------------
# b_{0,4}(x) &= (1-x)^{4},\\
# b_{1,4}(x) &= 4 x(1-x)^{3},   & \quad
# b_{2,4}(x) &= 6 x^2(1-x)^{2}, \\
# b_{3,4}(x) &= 4 x^3(1-x) & \quad
# b_{4,4}(x) &= x^4.
par(bg=NA)
m <- 10; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
m <- 20; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
m <- 200; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
m <- 15; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 5, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 5)
}
m <- 15; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 15, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 15)
}
m <- 10; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 15, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 15)
}
m <- 15; tau <- 1; k <- 0
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), xlim = c(0, tau), ylim = c(0,1), frame = F, lwd = 15, col = viridis(m+1)[1], ylab = "", xlab = "", cex.axis  = 1.5)
axis(side = 2, at = c(0.2,0.6,1), cex.axis = 1.5)
for(k in 1:m){
curve(choose(m, k)*((x/tau)^k)*(1-(x/tau))^(m-k), add = T, col = viridis(m+1)[k+1], lwd = 15)
}
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#440154FF", h_color="#FDE725FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#440154FF", h_color="#FDE725FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#440154FF", h_color="#FDE725FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#440154FF", h_color="#DCDCDC",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#DCDCDC", h_color="#FDE725FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#DCDCDC", h_color="#FDE725FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#DCDCDC", h_color="#FDE725FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#DCDCDC", h_color="#FDE725FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#DCDCDC", h_color="#FDE725FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#DCDCDC", h_color="#FDE725FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
sticker("inst/figures/bp.png", package="spsurv", p_size=20, s_x=1, s_y=.75, s_width=.6,  h_fill="#DCDCDC", h_color="#FDE725FF",
filename="inst/figures/imgfile.png", p_family = "ASC")
