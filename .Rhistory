## MLE
t1 <- Sys.time()
mle <- try(spbp(Surv(y, status) ~., model = model,
approach = "mle", data = db))
t2 <- Sys.time()
print(eval(mle$call$data))
if(class(mle) == "spbp"){
### BETA_MLE
beta_mle <- matrix(c(step, mle$coefficients[1:mle$q]), nrow = 1)
fwrite(beta_mle, file = paste0(model,"_", dist, "/results/beta_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### gamma_MLE
gamma_mle <- matrix(c(step, mle$coefficients[(mle$q+1):length(mle$coefficients)]), nrow = 1)
fwrite(gamma_mle, file = paste0(model,"_", dist, "/results/gamma_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### LOGLIK_MLE
loglik_mle <- matrix(c(step, mle$loglik), nrow = 1)
fwrite(loglik_mle, file = paste0(model,"_", dist, "/results/loglik_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### SURVIVOR
new <- data.frame(numerical = mean(db$numerical),
categorical = 1)
surv_mle <- matrix(survivor(mle, new), nrow = 1)
fwrite(surv_mle, file = paste0(model,"_", dist, "/results/surv_mle.txt"),
row.names = F,
col.names = F,
append = T
)
}
else{
fwrite(matrix(c(step, "mle", mle[1]), nrow = 1), file = paste0(model,"_", dist, "/results/error.txt"),
row.names = F,
col.names = F,
append = T
)
}
################################################
## BAYES
t3 <- Sys.time()
bayes <- try(spbp(Surv(y, status) ~.,
model = model, approach = "bayes",
data = db, chains = 1))
t4 <- Sys.time()
if(class(bayes) == "spbp"){
### EXTRACTING CHAINS
#### BETA
beta_bayes <- extract(bayes$stanfit, pars = "beta_std")$beta_std
beta_bayes_mean <- matrix(c(step, colMeans(beta_bayes)), nrow = 1)
beta_bayes_median <- matrix(c(step, apply(beta_bayes, 2, median)), nrow = 1)
beta_bayes_mode <- matrix(c(step, bayes$pmode[1:ncol(beta_bayes)]), nrow = 1)
fwrite(cbind(step, beta_bayes), file = paste0(model,"_", dist, "/results/beta_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(beta_bayes_mean, file = paste0(model,"_", dist, "/results/beta_bayes_mean.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(beta_bayes_median, file = paste0(model,"_", dist, "/results/beta_bayes_median.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(beta_bayes_mode, file = paste0(model,"_", dist, "/results/beta_bayes_mode.txt"),
row.names = F,
col.names = F,
append = T
)
#### gamma
gamma_bayes <- extract(bayes$stanfit, pars = "gamma_std")$gamma_std
gamma_bayes_mean <- matrix(c(step, colMeans(gamma_bayes)), nrow = 1)
gamma_bayes_median <- matrix(c(step, apply(gamma_bayes, 2, median)), nrow = 1)
gamma_bayes_mode <- matrix(c(step, bayes$pmode[(ncol(beta_bayes)+1):(ncol(beta_bayes)+ncol(gamma_bayes))]), nrow = 1)
fwrite(cbind(step, gamma_bayes), file = paste0(model,"_", dist, "/results/gamma_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(gamma_bayes_mean, file = paste0(model,"_", dist, "/results/gamma_bayes_mean.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(gamma_bayes_median, file = paste0(model,"_", dist, "/results/gamma_bayes_median.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(gamma_bayes_mode, file = paste0(model,"_", dist, "/results/gamma_bayes_mode.txt"),
row.names = F,
col.names = F,
append = T
)
#### LOG_LIK
loglik_bayes <- cbind(step, extract(bayes$stanfit, pars = "log_lik")$log_lik)
fwrite(loglik_bayes, file = paste0(model,"_", dist, "/results/loglik_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
### WAIC
waic <- matrix(c(step, bayes$waic$estimates[3,]), nrow = 1)
fwrite(waic, file = paste0(model,"_", dist, "/results/waic.txt"),
row.names = F,
col.names = F,
append = T
)
### LOO
loo <- matrix(c(step, bayes$loo$estimates[3,]), nrow = 1)
fwrite(loo, file = paste0(model,"_", dist, "/results/loo.txt"),
row.names = F,
col.names = F,
append = T
)
### SURVIVOR
new <- data.frame(numerical = mean(db$numerical),
categorical = 1)
surv_bayes_mean <- matrix(apply(survivor(bayes, new), 2, mean), nrow = 1)
surv_bayes_median <- matrix(apply(survivor(bayes, new), 2, median), nrow = 1)
fwrite(surv_bayes_mean, file = paste0(model,"_", dist, "/results/surv_bayes_mean.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(surv_bayes_median, file = paste0(model,"_", dist, "/results/surv_bayes_median.txt"),
row.names = F,
col.names = F,
append = T
)
}
else{
fwrite(matrix(c(step, "bayes", bayes[1]), nrow = 1), file = paste0(model,"_", dist, "/results/error.txt"),
row.names = F,
col.names = F,
append = T
)
}
## CENSORING + TIME
censntime <-matrix(c(step,
attributes(db)$censoring,
difftime(time1 = t2, time2 = t1, units = "sec"),
difftime(time1 = t4, time2 = t3, units = "sec")
), nrow = 1)
fwrite(censntime, file = paste0(model,"_", dist, "/results/censntime.txt"),
row.names = F,
col.names = F,
append = T
)
invisible()
}
library(data.table)
ph_llogis <- function(x){
message("step ", x)
simbp(step = x, dist = "llogis", model = "ph")
}
ph_llogis(1)
simbp <- function(step, model, dist){
db <- fread(paste0(model,"_", dist, "/data_", model, "_",
dist, "_", step, ".txt"))
################################################
## MLE
t1 <- Sys.time()
mle <- try(spbp(Surv(y, status) ~., model = model,
approach = "mle", data = db))
t2 <- Sys.time()
print(eval(mle$call$data))
if(class(mle) == "spbp"){
### BETA_MLE
beta_mle <- matrix(c(step, mle$coefficients[1:mle$q]), nrow = 1)
fwrite(beta_mle, file = paste0(model,"_", dist, "/results/beta_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### gamma_MLE
gamma_mle <- matrix(c(step, mle$coefficients[(mle$q+1):length(mle$coefficients)]), nrow = 1)
fwrite(gamma_mle, file = paste0(model,"_", dist, "/results/gamma_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### LOGLIK_MLE
loglik_mle <- matrix(c(step, mle$loglik), nrow = 1)
fwrite(loglik_mle, file = paste0(model,"_", dist, "/results/loglik_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### SURVIVOR
new <- data.frame(numerical = mean(db$numerical),
categorical = 1)
surv_mle <- matrix(survivor(mle, new), nrow = 1)
fwrite(surv_mle, file = paste0(model,"_", dist, "/results/surv_mle.txt"),
row.names = F,
col.names = F,
append = T
)
}
else{
fwrite(matrix(c(step, "mle", mle[1]), nrow = 1), file = paste0(model,"_", dist, "/results/error.txt"),
row.names = F,
col.names = F,
append = T
)
}
################################################
## BAYES
t3 <- Sys.time()
bayes <- try(spbp(Surv(y, status) ~.,
model = model, approach = "bayes",
data = db, chains = 1))
t4 <- Sys.time()
if(class(bayes) == "spbp"){
### EXTRACTING CHAINS
#### BETA
beta_bayes <- extract(bayes$stanfit, pars = "beta_std")$beta_std
beta_bayes_mean <- matrix(c(step, colMeans(beta_bayes)), nrow = 1)
beta_bayes_median <- matrix(c(step, apply(beta_bayes, 2, median)), nrow = 1)
beta_bayes_mode <- matrix(c(step, bayes$pmode[1:ncol(beta_bayes)]), nrow = 1)
# fwrite(cbind(step, beta_bayes), file = paste0(model,"_", dist, "/results/beta_bayes.txt"),
#        row.names = F,
#        col.names = F,
#        append = T
# )
fwrite(beta_bayes_mean, file = paste0(model,"_", dist, "/results/beta_bayes_mean.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(beta_bayes_median, file = paste0(model,"_", dist, "/results/beta_bayes_median.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(beta_bayes_mode, file = paste0(model,"_", dist, "/results/beta_bayes_mode.txt"),
row.names = F,
col.names = F,
append = T
)
#### gamma
gamma_bayes <- extract(bayes$stanfit, pars = "gamma_std")$gamma_std
gamma_bayes_mean <- matrix(c(step, colMeans(gamma_bayes)), nrow = 1)
gamma_bayes_median <- matrix(c(step, apply(gamma_bayes, 2, median)), nrow = 1)
gamma_bayes_mode <- matrix(c(step, bayes$pmode[(ncol(beta_bayes)+1):(ncol(beta_bayes)+ncol(gamma_bayes))]), nrow = 1)
# fwrite(cbind(step, gamma_bayes), file = paste0(model,"_", dist, "/results/gamma_bayes.txt"),
#             row.names = F,
#             col.names = F,
#             append = T
# )
fwrite(gamma_bayes_mean, file = paste0(model,"_", dist, "/results/gamma_bayes_mean.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(gamma_bayes_median, file = paste0(model,"_", dist, "/results/gamma_bayes_median.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(gamma_bayes_mode, file = paste0(model,"_", dist, "/results/gamma_bayes_mode.txt"),
row.names = F,
col.names = F,
append = T
)
#### LOG_LIK
loglik_bayes <- cbind(step, extract(bayes$stanfit, pars = "log_lik")$log_lik)
fwrite(loglik_bayes, file = paste0(model,"_", dist, "/results/loglik_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
### WAIC
waic <- matrix(c(step, bayes$waic$estimates[3,]), nrow = 1)
fwrite(waic, file = paste0(model,"_", dist, "/results/waic.txt"),
row.names = F,
col.names = F,
append = T
)
### LOO
loo <- matrix(c(step, bayes$loo$estimates[3,]), nrow = 1)
fwrite(loo, file = paste0(model,"_", dist, "/results/loo.txt"),
row.names = F,
col.names = F,
append = T
)
### SURVIVOR
new <- data.frame(numerical = mean(db$numerical),
categorical = 1)
surv_bayes_mean <- matrix(apply(survivor(bayes, new), 2, mean), nrow = 1)
surv_bayes_median <- matrix(apply(survivor(bayes, new), 2, median), nrow = 1)
fwrite(surv_bayes_mean, file = paste0(model,"_", dist, "/results/surv_bayes_mean.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(surv_bayes_median, file = paste0(model,"_", dist, "/results/surv_bayes_median.txt"),
row.names = F,
col.names = F,
append = T
)
}
else{
fwrite(matrix(c(step, "bayes", bayes[1]), nrow = 1), file = paste0(model,"_", dist, "/results/error.txt"),
row.names = F,
col.names = F,
append = T
)
}
## CENSORING + TIME
censntime <-matrix(c(step,
attributes(db)$censoring,
difftime(time1 = t2, time2 = t1, units = "sec"),
difftime(time1 = t4, time2 = t3, units = "sec")
), nrow = 1)
fwrite(censntime, file = paste0(model,"_", dist, "/results/censntime.txt"),
row.names = F,
col.names = F,
append = T
)
invisible()
}
library(data.table)
ph_llogis <- function(x){
message("step ", x)
simbp(step = x, dist = "llogis", model = "ph")
}
ph_llogis(1)
simbp <- function(step, model, dist){
db <- fread(paste0(model,"_", dist, "/data_", model, "_",
dist, "_", step, ".txt"))
################################################
## MLE
t1 <- Sys.time()
mle <- try(spbp(Surv(y, status) ~., model = model,
approach = "mle", data = db))
t2 <- Sys.time()
print(eval(mle$call$data))
if(class(mle) == "spbp"){
### BETA_MLE
beta_mle <- matrix(c(step, mle$coefficients[1:mle$q]), nrow = 1)
fwrite(beta_mle, file = paste0(model,"_", dist, "/results/beta_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### gamma_MLE
gamma_mle <- matrix(c(step, mle$coefficients[(mle$q+1):length(mle$coefficients)]), nrow = 1)
fwrite(gamma_mle, file = paste0(model,"_", dist, "/results/gamma_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### LOGLIK_MLE
# loglik_mle <- matrix(c(step, mle$loglik), nrow = 1)
#
# fwrite(loglik_mle, file = paste0(model,"_", dist, "/results/loglik_mle.txt"),
#             row.names = F,
#             col.names = F,
#             append = T
# )
### SURVIVOR
new <- data.frame(numerical = mean(db$numerical),
categorical = 1)
surv_mle <- matrix(survivor(mle, new), nrow = 1)
fwrite(surv_mle, file = paste0(model,"_", dist, "/results/surv_mle.txt"),
row.names = F,
col.names = F,
append = T
)
}
else{
fwrite(matrix(c(step, "mle", mle[1]), nrow = 1), file = paste0(model,"_", dist, "/results/error.txt"),
row.names = F,
col.names = F,
append = T
)
}
################################################
## BAYES
t3 <- Sys.time()
bayes <- try(spbp(Surv(y, status) ~.,
model = model, approach = "bayes",
data = db, chains = 1))
t4 <- Sys.time()
if(class(bayes) == "spbp"){
### EXTRACTING CHAINS
#### BETA
beta_bayes <- extract(bayes$stanfit, pars = "beta_std")$beta_std
beta_bayes_mean <- matrix(c(step, colMeans(beta_bayes)), nrow = 1)
beta_bayes_median <- matrix(c(step, apply(beta_bayes, 2, median)), nrow = 1)
beta_bayes_mode <- matrix(c(step, bayes$pmode[1:ncol(beta_bayes)]), nrow = 1)
# fwrite(cbind(step, beta_bayes), file = paste0(model,"_", dist, "/results/beta_bayes.txt"),
#        row.names = F,
#        col.names = F,
#        append = T
# )
fwrite(beta_bayes_mean, file = paste0(model,"_", dist, "/results/beta_bayes_mean.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(beta_bayes_median, file = paste0(model,"_", dist, "/results/beta_bayes_median.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(beta_bayes_mode, file = paste0(model,"_", dist, "/results/beta_bayes_mode.txt"),
row.names = F,
col.names = F,
append = T
)
#### gamma
gamma_bayes <- extract(bayes$stanfit, pars = "gamma_std")$gamma_std
gamma_bayes_mean <- matrix(c(step, colMeans(gamma_bayes)), nrow = 1)
gamma_bayes_median <- matrix(c(step, apply(gamma_bayes, 2, median)), nrow = 1)
gamma_bayes_mode <- matrix(c(step, bayes$pmode[(ncol(beta_bayes)+1):(ncol(beta_bayes)+ncol(gamma_bayes))]), nrow = 1)
# fwrite(cbind(step, gamma_bayes), file = paste0(model,"_", dist, "/results/gamma_bayes.txt"),
#             row.names = F,
#             col.names = F,
#             append = T
# )
fwrite(gamma_bayes_mean, file = paste0(model,"_", dist, "/results/gamma_bayes_mean.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(gamma_bayes_median, file = paste0(model,"_", dist, "/results/gamma_bayes_median.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(gamma_bayes_mode, file = paste0(model,"_", dist, "/results/gamma_bayes_mode.txt"),
row.names = F,
col.names = F,
append = T
)
#### LOG_LIK
# loglik_bayes <- cbind(step, extract(bayes$stanfit, pars = "log_lik")$log_lik)
# fwrite(loglik_bayes, file = paste0(model,"_", dist, "/results/loglik_bayes.txt"),
#             row.names = F,
#             col.names = F,
#             append = T
# )
### WAIC
waic <- matrix(c(step, bayes$waic$estimates[3,]), nrow = 1)
fwrite(waic, file = paste0(model,"_", dist, "/results/waic.txt"),
row.names = F,
col.names = F,
append = T
)
### LOO
loo <- matrix(c(step, bayes$loo$estimates[3,]), nrow = 1)
fwrite(loo, file = paste0(model,"_", dist, "/results/loo.txt"),
row.names = F,
col.names = F,
append = T
)
### SURVIVOR
new <- data.frame(numerical = mean(db$numerical),
categorical = 1)
surv_bayes_mean <- matrix(apply(survivor(bayes, new), 2, mean), nrow = 1)
surv_bayes_median <- matrix(apply(survivor(bayes, new), 2, median), nrow = 1)
fwrite(surv_bayes_mean, file = paste0(model,"_", dist, "/results/surv_bayes_mean.txt"),
row.names = F,
col.names = F,
append = T
)
fwrite(surv_bayes_median, file = paste0(model,"_", dist, "/results/surv_bayes_median.txt"),
row.names = F,
col.names = F,
append = T
)
}
else{
fwrite(matrix(c(step, "bayes", bayes[1]), nrow = 1), file = paste0(model,"_", dist, "/results/error.txt"),
row.names = F,
col.names = F,
append = T
)
}
## CENSORING + TIME
censntime <-matrix(c(step,
attributes(db)$censoring,
difftime(time1 = t2, time2 = t1, units = "sec"),
difftime(time1 = t4, time2 = t3, units = "sec")
), nrow = 1)
fwrite(censntime, file = paste0(model,"_", dist, "/results/censntime.txt"),
row.names = F,
col.names = F,
append = T
)
invisible()
}
library(data.table)
ph_llogis <- function(x){
message("step ", x)
simbp(step = x, dist = "llogis", model = "ph")
}
ph_llogis(1)
ph_llogis(10)
source('~/Documents/spsurv/script/load.R', echo=TRUE)
