)
## CENSORING + TIME
censntime <-matrix(c(step,
attributes(db)$censoring,
difftime(time1 = t2, time2 = t1, units = "sec"),
difftime(time1 = t4, time2 = t3, units = "sec")
), nrow = 1)
write.table(censntime, file = paste0(model,"_", dist, "/results/censntime.txt"),
row.names = F,
col.names = F,
append = T
)
}
simbp(2, model = "ph", dist = "weibull")
simbp <- function(step, model, dist){
db <- read.table(paste0(model,"_", dist, "/data_", model, "_",
dist, "_", step, ".txt"))
################################################
## MLE
t1 <- Sys.time()
mle <- spbp(Surv(y, status) ~ x1 + x2, model = model,
approach = "mle", data = db)
t2 <- Sys.time()
### BETA_MLE
beta_mle <- matrix(c(step, mle$coefficients[1:mle$q]), nrow = 1)
write.table(beta_mle, file = paste0(model,"_", dist, "/results/beta_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### LOGGAMMA_MLE
loggamma_mle <- matrix(c(step, mle$coefficients[(mle$q+1):length(mle$coefficients)]), nrow = 1)
write.table(loggamma_mle, file = paste0(model,"_", dist, "/results/loggamma_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### LOGLIK_MLE
loglik_mle <- matrix(c(step, mle$loglik), nrow = 1)
write.table(loglik_mle, file = paste0(model,"_", dist, "/results/loglik_mle.txt"),
row.names = F,
col.names = F,
append = T
)
################################################
## BAYES
t3 <- Sys.time()
bayes <- spbp(Surv(y, status) ~ x1 + x2,
model = model, approach = "bayes",
data = db, chains = 1)
t4 <- Sys.time()
### EXTRACTING CHAINS
#### BETA
beta_bayes <- cbind(step, extract(fit1$stanfit)$beta)
write.table(beta_bayes, file = paste0(model,"_", dist, "/results/beta_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
#### GAMMA
loggamma_bayes <- cbind(step, extract(bayes$stanfit, pars = "nu")$nu)
write.table(loggamma_bayes, file = paste0(model,"_", dist, "/results/loggamma_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
#### LOG_LIK
loglik_bayes <- cbind(step, extract(bayes$stanfit, pars = "log_lik")$log_lik)
write.table(loglik_bayes, file = paste0(model,"_", dist, "/results/loglik_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
### WAIC
waic <- c(step, unlist(bayes$waic$estimates[3,]))
write.table(waic, file = paste0(model,"_", dist, "/results/waic.txt"),
row.names = F,
col.names = F,
append = T
)
### LOO
loo <- c(step, unlist(bayes$loo$estimates[3,]))
write.table(loo, file = paste0(model,"_", dist, "/results/loo.txt"),
row.names = F,
col.names = F,
append = T
)
## CENSORING + TIME
censntime <-matrix(c(step,
attributes(db)$censoring,
difftime(time1 = t2, time2 = t1, units = "sec"),
difftime(time1 = t4, time2 = t3, units = "sec")
), nrow = 1)
write.table(censntime, file = paste0(model,"_", dist, "/results/censntime.txt"),
row.names = F,
col.names = F,
append = T
)
}
simbp(2, model = "ph", dist = "weibull")
simbp <- function(step, model, dist){
db <- read.table(paste0(model,"_", dist, "/data_", model, "_",
dist, "_", step, ".txt"))
################################################
## MLE
t1 <- Sys.time()
mle <- spbp(Surv(y, status) ~ x1 + x2, model = model,
approach = "mle", data = db)
t2 <- Sys.time()
### BETA_MLE
beta_mle <- matrix(c(step, mle$coefficients[1:mle$q]), nrow = 1)
write.table(beta_mle, file = paste0(model,"_", dist, "/results/beta_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### LOGGAMMA_MLE
loggamma_mle <- matrix(c(step, mle$coefficients[(mle$q+1):length(mle$coefficients)]), nrow = 1)
write.table(loggamma_mle, file = paste0(model,"_", dist, "/results/loggamma_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### LOGLIK_MLE
loglik_mle <- matrix(c(step, mle$loglik), nrow = 1)
write.table(loglik_mle, file = paste0(model,"_", dist, "/results/loglik_mle.txt"),
row.names = F,
col.names = F,
append = T
)
################################################
## BAYES
t3 <- Sys.time()
bayes <- spbp(Surv(y, status) ~ x1 + x2,
model = model, approach = "bayes",
data = db, chains = 1)
t4 <- Sys.time()
### EXTRACTING CHAINS
#### BETA
beta_bayes <- cbind(step, extract(fit1$stanfit)$beta)
write.table(beta_bayes, file = paste0(model,"_", dist, "/results/beta_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
#### GAMMA
loggamma_bayes <- cbind(step, extract(bayes$stanfit, pars = "nu")$nu)
write.table(loggamma_bayes, file = paste0(model,"_", dist, "/results/loggamma_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
#### LOG_LIK
loglik_bayes <- cbind(step, extract(bayes$stanfit, pars = "log_lik")$log_lik)
write.table(loglik_bayes, file = paste0(model,"_", dist, "/results/loglik_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
### WAIC
waic <- matrix(c(step, bayes$waic$estimates[3,]), nrow = 1)
write.table(waic, file = paste0(model,"_", dist, "/results/waic.txt"),
row.names = F,
col.names = F,
append = T
)
### LOO
loo <- matrix(c(step, bayes$loo$estimates[3,]), nrow = 1)
write.table(loo, file = paste0(model,"_", dist, "/results/loo.txt"),
row.names = F,
col.names = F,
append = T
)
## CENSORING + TIME
censntime <-matrix(c(step,
attributes(db)$censoring,
difftime(time1 = t2, time2 = t1, units = "sec"),
difftime(time1 = t4, time2 = t3, units = "sec")
), nrow = 1)
write.table(censntime, file = paste0(model,"_", dist, "/results/censntime.txt"),
row.names = F,
col.names = F,
append = T
)
}
simbp(2, model = "ph", dist = "weibull")
simbp <- function(step, model, dist){
db <- read.table(paste0(model,"_", dist, "/data_", model, "_",
dist, "_", step, ".txt"))
################################################
## MLE
t1 <- Sys.time()
mle <- spbp(Surv(y, status) ~ x1 + x2, model = model,
approach = "mle", data = db)
t2 <- Sys.time()
### BETA_MLE
beta_mle <- matrix(c(step, mle$coefficients[1:mle$q]), nrow = 1)
write.table(beta_mle, file = paste0(model,"_", dist, "/results/beta_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### LOGGAMMA_MLE
loggamma_mle <- matrix(c(step, mle$coefficients[(mle$q+1):length(mle$coefficients)]), nrow = 1)
write.table(loggamma_mle, file = paste0(model,"_", dist, "/results/loggamma_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### LOGLIK_MLE
loglik_mle <- matrix(c(step, mle$loglik), nrow = 1)
write.table(loglik_mle, file = paste0(model,"_", dist, "/results/loglik_mle.txt"),
row.names = F,
col.names = F,
append = T
)
################################################
## BAYES
t3 <- Sys.time()
bayes <- spbp(Surv(y, status) ~ x1 + x2,
model = model, approach = "bayes",
data = db, chains = 1)
t4 <- Sys.time()
### EXTRACTING CHAINS
#### BETA
beta_bayes <- cbind(step, extract(fit1$stanfit)$beta)
write.table(beta_bayes, file = paste0(model,"_", dist, "/results/beta_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
#### GAMMA
loggamma_bayes <- cbind(step, extract(bayes$stanfit, pars = "nu")$nu)
write.table(loggamma_bayes, file = paste0(model,"_", dist, "/results/loggamma_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
#### LOG_LIK
loglik_bayes <- cbind(step, extract(bayes$stanfit, pars = "log_lik")$log_lik)
write.table(loglik_bayes, file = paste0(model,"_", dist, "/results/loglik_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
### WAIC
waic <- matrix(c(step, bayes$waic$estimates[3,]), nrow = 1)
write.table(waic, file = paste0(model,"_", dist, "/results/waic.txt"),
row.names = F,
col.names = F,
append = T
)
### LOO
loo <- matrix(c(step, bayes$loo$estimates[3,]), nrow = 1)
write.table(loo, file = paste0(model,"_", dist, "/results/loo.txt"),
row.names = F,
col.names = F,
append = T
)
## CENSORING + TIME
censntime <-matrix(c(step,
attributes(db)$censoring,
difftime(time1 = t2, time2 = t1, units = "sec"),
difftime(time1 = t4, time2 = t3, units = "sec")
), nrow = 1)
write.table(censntime, file = paste0(model,"_", dist, "/results/censntime.txt"),
row.names = F,
col.names = F,
append = T
)
}
simbp(2, model = "ph", dist = "weibull")
getwd()
read.table('weibull_ph/results/loglik_bayes.txt')
getwd()
read.table('/weibull_ph/results/loglik_bayes.txt')
read.table('/ph_weibull/results/loglik_bayes.txt')
read.table('~/ph_weibull/results/loglik_bayes.txt')
read.table('ph_weibull/results/loglik_bayes.txt')
dim(read.table('ph_weibull/results/loglik_bayes.txt'))
Viw(read.table('ph_weibull/results/loglik_bayes.txt'))
View(read.table('ph_weibull/results/loglik_bayes.txt'))
simbp <- function(step, model, dist){
db <- read.table(paste0(model,"_", dist, "/data_", model, "_",
dist, "_", step, ".txt"))
################################################
## MLE
t1 <- Sys.time()
mle <- spbp(Surv(y, status) ~ x1 + x2, model = model,
approach = "mle", data = db)
t2 <- Sys.time()
### BETA_MLE
beta_mle <- matrix(c(step, mle$coefficients[1:mle$q]), nrow = 1)
write.table(beta_mle, file = paste0(model,"_", dist, "/results/beta_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### LOGGAMMA_MLE
loggamma_mle <- matrix(c(step, mle$coefficients[(mle$q+1):length(mle$coefficients)]), nrow = 1)
write.table(loggamma_mle, file = paste0(model,"_", dist, "/results/loggamma_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### LOGLIK_MLE
loglik_mle <- matrix(c(step, mle$loglik), nrow = 1)
write.table(loglik_mle, file = paste0(model,"_", dist, "/results/loglik_mle.txt"),
row.names = F,
col.names = F,
append = T
)
################################################
## BAYES
t3 <- Sys.time()
bayes <- spbp(Surv(y, status) ~ x1 + x2,
model = model, approach = "bayes",
data = db, chains = 1)
t4 <- Sys.time()
### EXTRACTING CHAINS
#### BETA
beta_bayes <- cbind(step, extract(fit1$stanfit)$beta)
write.table(beta_bayes, file = paste0(model,"_", dist, "/results/beta_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
#### GAMMA
loggamma_bayes <- cbind(step, extract(bayes$stanfit, pars = "nu")$nu)
write.table(loggamma_bayes, file = paste0(model,"_", dist, "/results/loggamma_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
#### LOG_LIK
loglik_bayes <- cbind(step, extract(bayes$stanfit, pars = "log_lik")$log_lik)
write.table(loglik_bayes, file = paste0(model,"_", dist, "/results/loglik_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
### WAIC
waic <- matrix(c(step, bayes$waic$estimates[3,]), nrow = 1)
write.table(waic, file = paste0(model,"_", dist, "/results/waic.txt"),
row.names = F,
col.names = F,
append = T
)
### LOO
loo <- matrix(c(step, bayes$loo$estimates[3,]), nrow = 1)
write.table(loo, file = paste0(model,"_", dist, "/results/loo.txt"),
row.names = F,
col.names = F,
append = T
)
## CENSORING + TIME
censntime <-matrix(c(step,
attributes(db)$censoring,
difftime(time1 = t2, time2 = t1, units = "sec"),
difftime(time1 = t4, time2 = t3, units = "sec")
), nrow = 1)
write.table(censntime, file = paste0(model,"_", dist, "/results/censntime.txt"),
row.names = F,
col.names = F,
append = T
)
}
simbp(2, model = "ph", dist = "weibull")
simbp(2, model = "ph", dist = "weibull")
loglik_bayes <- read.table('ph_weibull/results/loglik_bayes.txt')
loglik_bayes
dim(loglik_bayes)
extrac(fit1$stanfit, "log_lik")
extract(fit1$stanfit, "log_lik")
extract(fit1, "log_lik")
traceplot(fit1, "log_lik")
traceplot.spbp(fit1, "log_lik")
extract.spbp(fit1, "log_lik")
?extract.spbp(fit1, "log_lik")
extract(fit1$stanfit, "log_lik")
extract(fit1$stanfit, "log_lik")$loglik
extract(fit1$stanfit, "log_lik")$log_lik
dim(extract(fit1$stanfit, "log_lik")$log_lik)
simbp <- function(step, model, dist){
db <- read.table(paste0(model,"_", dist, "/data_", model, "_",
dist, "_", step, ".txt"))
################################################
## MLE
t1 <- Sys.time()
mle <- spbp(Surv(y, status) ~ x1 + x2, model = model,
approach = "mle", data = db)
t2 <- Sys.time()
### BETA_MLE
beta_mle <- matrix(c(step, mle$coefficients[1:mle$q]), nrow = 1)
write.table(beta_mle, file = paste0(model,"_", dist, "/results/beta_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### LOGGAMMA_MLE
loggamma_mle <- matrix(c(step, mle$coefficients[(mle$q+1):length(mle$coefficients)]), nrow = 1)
write.table(loggamma_mle, file = paste0(model,"_", dist, "/results/loggamma_mle.txt"),
row.names = F,
col.names = F,
append = T
)
### LOGLIK_MLE
loglik_mle <- matrix(c(step, mle$loglik), nrow = 1)
write.table(loglik_mle, file = paste0(model,"_", dist, "/results/loglik_mle.txt"),
row.names = F,
col.names = F,
append = T
)
################################################
## BAYES
t3 <- Sys.time()
bayes <- spbp(Surv(y, status) ~ x1 + x2,
model = model, approach = "bayes",
data = db, chains = 1)
t4 <- Sys.time()
### EXTRACTING CHAINS
#### BETA
beta_bayes <- cbind(step, extract(fit1$stanfit)$beta)
write.table(beta_bayes, file = paste0(model,"_", dist, "/results/beta_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
#### GAMMA
loggamma_bayes <- cbind(step, extract(bayes$stanfit, pars = "nu")$nu)
write.table(loggamma_bayes, file = paste0(model,"_", dist, "/results/loggamma_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
#### LOG_LIK
loglik_bayes <- cbind(step, extract(bayes$stanfit, pars = "log_lik")$log_lik)
write.table(loglik_bayes, file = paste0(model,"_", dist, "/results/loglik_bayes.txt"),
row.names = F,
col.names = F,
append = T
)
### WAIC
waic <- matrix(c(step, bayes$waic$estimates[3,]), nrow = 1)
write.table(waic, file = paste0(model,"_", dist, "/results/waic.txt"),
row.names = F,
col.names = F,
append = T
)
### LOO
loo <- matrix(c(step, bayes$loo$estimates[3,]), nrow = 1)
write.table(loo, file = paste0(model,"_", dist, "/results/loo.txt"),
row.names = F,
col.names = F,
append = T
)
## CENSORING + TIME
censntime <-matrix(c(step,
attributes(db)$censoring,
difftime(time1 = t2, time2 = t1, units = "sec"),
difftime(time1 = t4, time2 = t3, units = "sec")
), nrow = 1)
write.table(censntime, file = paste0(model,"_", dist, "/results/censntime.txt"),
row.names = F,
col.names = F,
append = T
)
}
simbp(2, model = "ph", dist = "weibull")
loglik_bayes <- read.table('ph_weibull/results/beta_bayes.txt')
loglik_bayes <- read.table('ph_weibull/results/loglik_bayes.txt')
sfInit(parallel=TRUE, cpus=parallel::detectCores())
sfExportAll()
sfLibrary(spsurv)
sfLibrary(spsurv)
sfApply(1:3, function(x){simbp(x, dist = "weibull", model = "ph")})
sfApply(1:3, fun = function(x){simbp(x, dist = "weibull", model = "ph")})
sfApply(1:3, fun = function(x){simbp(step = x, dist = "weibull", model = "ph")})
sfApply(1, fun = function(x){simbp(step = x, dist = "weibull", model = "ph")})
sfApply(1:3, fun = function(x){simbp(step = x, dist = "weibull", model = "ph")})
sfStop()
sfInit(parallel=TRUE, cpus=parallel::detectCores())
sfExportAll()
sfLibrary(spsurv)
sfApply(1:3, fun = function(x){simbp(step = x, dist = "weibull", model = "ph")})
sfStop()
sfInit(parallel=TRUE, cpus=parallel::detectCores())
sfExportAll()
sfLibrary(spsurv)
sfApply(1:MC, fun = function(x){simbp(step = x, dist = "weibull", model = "ph")})
sfStop()
sfGetCluster()
sfInit(parallel=TRUE, cpus=parallel::detectCores())
sfStop()
sfInit(parallel=TRUE, cpus=parallel::detectCores())
sfGetCluster()
sfExportAll()
sfLibrary(spsurv)
sfApply(1:MC, fun = function(x){simbp(step = x, dist = "weibull", model = "ph")})
sfInit(parallel=TRUE, cpus=4)
sfGetCluster()
sfExportAll()
sfLibrary(spsurv)
sfApply(1:MC, fun = function(x){simbp(step = x, dist = "weibull", model = "ph")})
sfStop()
sfInit(parallel=TRUE, cpus=3)
sfGetCluster()
sfExportAll()
sfLibrary(spsurv)
sfApply(1:MC, fun = function(x){simbp(step = x, dist = "weibull", model = "ph")})
sfStop()
?sfLibrary()
