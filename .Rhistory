## DIC, LPML e WAIC
rm(list=ls())
setwd("~")
load("Documents/spsurvsim/result_files/N_200/prior1_aft_llogis_results.RData")
setwd("~")
load("Documents/spsurvsim/result_files/N_200/prior1_aft_llogis_results.RData")
## DIC, LPML e WAIC
rm(list=ls())
setwd("~")
load("Documents/spsurvsim/result_files/n_200/prior1_aft_llogis_results.RData")
load("Documents/spsurvsim/result_files/n_200/prior1_aft_llogis_results.RData")
dic1 <- dic; waic1 <- waic; lpml1 <- lpml
load("Documents/spsurvsim/result_files/n_200/prior2_aft_llogis_results.RData")
dic2 <- dic; waic2 <- waic; lpml2 <- lpml
load("Documents/spsurvsim/result_files/n_200/prior3_aft_llogis_results.RData")
dic3 <- dic; waic3 <- waic; lpml3 <- lpml
load("Documents/spsurvsim/result_files/n_200/prior4_ph_llogis_results.RData")
dic4 <- dic; waic4 <- waic; lpml4 <- lpml
library(ggthemes)
library(ggplot2)
library(data.table)
dic <- Reduce((function() {counter = 0
function(x, y) {
counter <<- counter + 1
d = merge(x, y, all = T, by = 'V1')
setnames(d, c(head(names(d), -1), paste0('y.', counter)))
}})(), list(dic1[!duplicated(dic1$V1),1:2], dic2[!duplicated(dic2$V1),1:2], dic3[!duplicated(dic3$V1),1:2], dic4[!duplicated(dic4$V1),1:2]))
waic <- Reduce((function() {counter = 0
function(x, y) {
counter <<- counter + 1
d = merge(x, y, all = T, by = 'V1')
setnames(d, c(head(names(d), -1), paste0('y.', counter)))
}})(), list(waic1[!duplicated(waic1$V1),1:2], waic2[!duplicated(waic2$V1),1:2], waic3[!duplicated(waic3$V1),1:2], waic4[!duplicated(waic4$V1),1:2]))
waic <- waic[-unique(which(waic==Inf, arr.ind = T)[,1]),]
lpml <- Reduce((function() {counter = 0
function(x, y) {
counter <<- counter + 1
d = merge(x, y, all = T, by = 'V1')
setnames(d, c(head(names(d), -1), paste0('y.', counter)))
}})(), list(lpml1[!duplicated(lpml1$V1),1:2],
lpml2[!duplicated(lpml2$V1),1:2],
lpml3[!duplicated(lpml3$V1),1:2],
lpml4[!duplicated(lpml4$V1),1:2]))
lpml<- lpml[-unique(which(lpml==Inf, arr.ind = T)[,1]),]
lst <- list(dic = dic,
waic = waic,
lpml = lpml)
colnames(lst$dic) <- c("id", paste0("dic", 1:4))
colnames(lst$waic) <- c("id", paste0("waic", 1:4))
colnames(lst$lpml) <- c("id", paste0("lpml", 1:4))
aux2 <- Reduce((function() {counter = 0
function(x, y) {
counter <<- counter + 1
d = merge(x, y, all = T, by = 'id')
setnames(d, c(head(names(d), -1), paste0('y.', counter)))
}})(), lst)
aux <- na.omit(data.frame(dic = (aux2[,c(2,4,5)]-cbind(aux2[,3], aux2[,3], aux2[,3]))/abs(aux2[,c(2,4,5)]),
waic = (aux2[,c(6,8,9)]-cbind(aux2[,7], aux2[,7], aux2[,7]))/abs(aux2[,c(6,8,9)]),
lpml = (aux2[,c(10,12,13)]-cbind(aux2[,11], aux2[,11], aux2[,11]))/abs(aux2[,c(10,12,13)]))
)
colMeans(aux)
# library
library(ggplot2)
dt <- data.frame(cri = rep(c("DIC", "WAIC", "LPML"), each = 3*nrow(aux)),
criteria = rep(c("prior1", "prior3", "prior4"), each = nrow(na.omit(aux))),
rat = unlist(aux))
## DIC, LPML e WAIC
rm(list=ls())
setwd("~")
load("Documents/spsurvsim/result_files/n_200/prior1_aft_llogis_results.RData")
dic1 <- dic; waic1 <- waic; lpml1 <- lpml
load("Documents/spsurvsim/result_files/n_200/prior2_aft_llogis_results.RData")
dic2 <- dic; waic2 <- waic; lpml2 <- lpml
load("Documents/spsurvsim/result_files/n_200/prior3_aft_llogis_results.RData")
dic3 <- dic; waic3 <- waic; lpml3 <- lpml
load("Documents/spsurvsim/result_files/n_200/prior4_ph_llogis_results.RData")
load("Documents/spsurvsim/result_files/n_200/prior3_aft_llogis_results.RData")
dic3 <- dic; waic3 <- waic; lpml3 <- lpml
load("Documents/spsurvsim/result_files/n_200/prior4_ph_llogis_results.RData")
rm(list=ls())
setwd("~")
load("Documents/spsurvsim/result_files/n_200/prior1_aft_llogis_results.RData")
dic1 <- dic; waic1 <- waic; lpml1 <- lpml
load("Documents/spsurvsim/result_files/n_200/prior2_aft_llogis_results.RData")
dic2 <- dic; waic2 <- waic; lpml2 <- lpml
load("Documents/spsurvsim/result_files/n_200/prior3_aft_llogis_results.RData")
dic3 <- dic; waic3 <- waic; lpml3 <- lpml
load("Documents/spsurvsim/result_files/n_200/prior4_aft_llogis_results.RData")
dic4 <- dic; waic4 <- waic; lpml4 <- lpml
library(ggthemes)
library(ggplot2)
library(data.table)
dic <- Reduce((function() {counter = 0
function(x, y) {
counter <<- counter + 1
d = merge(x, y, all = T, by = 'V1')
setnames(d, c(head(names(d), -1), paste0('y.', counter)))
}})(), list(dic1[!duplicated(dic1$V1),1:2], dic2[!duplicated(dic2$V1),1:2], dic3[!duplicated(dic3$V1),1:2], dic4[!duplicated(dic4$V1),1:2]))
waic <- Reduce((function() {counter = 0
function(x, y) {
counter <<- counter + 1
d = merge(x, y, all = T, by = 'V1')
setnames(d, c(head(names(d), -1), paste0('y.', counter)))
}})(), list(waic1[!duplicated(waic1$V1),1:2], waic2[!duplicated(waic2$V1),1:2], waic3[!duplicated(waic3$V1),1:2], waic4[!duplicated(waic4$V1),1:2]))
waic <- waic[-unique(which(waic==Inf, arr.ind = T)[,1]),]
lpml <- Reduce((function() {counter = 0
function(x, y) {
counter <<- counter + 1
d = merge(x, y, all = T, by = 'V1')
setnames(d, c(head(names(d), -1), paste0('y.', counter)))
}})(), list(lpml1[!duplicated(lpml1$V1),1:2],
lpml2[!duplicated(lpml2$V1),1:2],
lpml3[!duplicated(lpml3$V1),1:2],
lpml4[!duplicated(lpml4$V1),1:2]))
lpml<- lpml[-unique(which(lpml==Inf, arr.ind = T)[,1]),]
lst <- list(dic = dic,
waic = waic,
lpml = lpml)
colnames(lst$dic) <- c("id", paste0("dic", 1:4))
colnames(lst$waic) <- c("id", paste0("waic", 1:4))
colnames(lst$lpml) <- c("id", paste0("lpml", 1:4))
aux2 <- Reduce((function() {counter = 0
function(x, y) {
counter <<- counter + 1
d = merge(x, y, all = T, by = 'id')
setnames(d, c(head(names(d), -1), paste0('y.', counter)))
}})(), lst)
aux <- na.omit(data.frame(dic = (aux2[,c(2,4,5)]-cbind(aux2[,3], aux2[,3], aux2[,3]))/abs(aux2[,c(2,4,5)]),
waic = (aux2[,c(6,8,9)]-cbind(aux2[,7], aux2[,7], aux2[,7]))/abs(aux2[,c(6,8,9)]),
lpml = (aux2[,c(10,12,13)]-cbind(aux2[,11], aux2[,11], aux2[,11]))/abs(aux2[,c(10,12,13)]))
)
colMeans(aux)
# library
library(ggplot2)
dt <- data.frame(cri = rep(c("DIC", "WAIC", "LPML"), each = 3*nrow(aux)),
criteria = rep(c("prior1", "prior3", "prior4"), each = nrow(na.omit(aux))),
rat = unlist(aux))
# View(cbind(dt, names(unlist(aux))))
# grouped boxplot
ggplot(dt, aes(x=cri, y=rat, fill=criteria)) +
geom_boxplot()+
theme_hc(base_size = 15)+
xlab("") + ylab("")+ geom_hline(yintercept = 0)+
ylim(-.04,.04)
dt
aux
## DIC, LPML e WAIC
rm(list=ls())
setwd("~")
load("Documents/spsurvsim/result_files/n_200/prior1_aft_llogis_results.RData")
dic1 <- dic; waic1 <- waic; lpml1 <- lpml
load("Documents/spsurvsim/result_files/n_200/prior2_aft_llogis_results.RData")
dic2 <- dic; waic2 <- waic; lpml2 <- lpml
load("Documents/spsurvsim/result_files/n_200/prior3_aft_llogis_results.RData")
dic3 <- dic; waic3 <- waic; lpml3 <- lpml
load("Documents/spsurvsim/result_files/n_200/prior4_aft_llogis_results.RData")
dic4 <- dic; waic4 <- waic; lpml4 <- lpml
library(ggthemes)
library(ggplot2)
library(data.table)
dic <- Reduce((function() {counter = 0
function(x, y) {
counter <<- counter + 1
d = merge(x, y, all = T, by = 'V1')
setnames(d, c(head(names(d), -1), paste0('y.', counter)))
}})(), list(dic1[!duplicated(dic1$V1),1:2], dic2[!duplicated(dic2$V1),1:2], dic3[!duplicated(dic3$V1),1:2], dic4[!duplicated(dic4$V1),1:2]))
waic <- Reduce((function() {counter = 0
function(x, y) {
counter <<- counter + 1
d = merge(x, y, all = T, by = 'V1')
setnames(d, c(head(names(d), -1), paste0('y.', counter)))
}})(), list(waic1[!duplicated(waic1$V1),1:2], waic2[!duplicated(waic2$V1),1:2], waic3[!duplicated(waic3$V1),1:2], waic4[!duplicated(waic4$V1),1:2]))
waic <- waic[-unique(which(waic==Inf, arr.ind = T)[,1]),]
lpml <- Reduce((function() {counter = 0
function(x, y) {
counter <<- counter + 1
d = merge(x, y, all = T, by = 'V1')
setnames(d, c(head(names(d), -1), paste0('y.', counter)))
}})(), list(lpml1[!duplicated(lpml1$V1),1:2],
lpml2[!duplicated(lpml2$V1),1:2],
lpml3[!duplicated(lpml3$V1),1:2],
lpml4[!duplicated(lpml4$V1),1:2]))
lpml<- lpml[-unique(which(lpml==Inf, arr.ind = T)[,1]),]
lst <- list(dic = dic,
waic = waic,
lpml = lpml)
colnames(lst$dic) <- c("id", paste0("dic", 1:4))
colnames(lst$waic) <- c("id", paste0("waic", 1:4))
colnames(lst$lpml) <- c("id", paste0("lpml", 1:4))
aux2 <- Reduce((function() {counter = 0
function(x, y) {
counter <<- counter + 1
d = merge(x, y, all = T, by = 'id')
setnames(d, c(head(names(d), -1), paste0('y.', counter)))
}})(), lst)
aux <- na.omit(data.frame(dic = (aux2[,c(2,4,5)]-cbind(aux2[,3], aux2[,3], aux2[,3]))/abs(aux2[,c(2,4,5)]),
waic = (aux2[,c(6,8,9)]-cbind(aux2[,7], aux2[,7], aux2[,7]))/abs(aux2[,c(6,8,9)]),
lpml = (aux2[,c(10,12,13)]-cbind(aux2[,11], aux2[,11], aux2[,11]))/abs(aux2[,c(10,12,13)]))
)
colMeans(aux)
# library
library(ggplot2)
?survival
??survival
??ggplot::ggplot
??ggplot2
??ggplot2::ggplot2
??survminer
?survminer
??survminer
??survminer
??survminer-package
?spsurv
??spsurv
?spsurv::spbp
?ggplot2::aes()
?survival::aareg
?timereg::aalen
?flexsurv::`flexsurv-package`
remove.packages("spsurv")
library(devtools)
install_github("rvpanaro/spsurv")
library("KMsurv")
data("larynx")
## Maximum Likelihood
fit <- spsurv::spbp(Surv(time, delta)~age+factor(stage),
approach = "mle",  data = larynx)
library(spsurv)
fit2 <- spbp(Surv(time, delta)~age+factor(stage),
approach = "bayes",  data = larynx,
iter = 2000, chains = 1, warmup = 1000)
summry(fit2)
summary(fit2)
plot(fit2)
traceplot(fit2)
spsurv::traceplot(fit2)
coef(fit2)
fit2$var
fit$var
## Maximum Likelihood
fit <- spbp(Surv(time, delta)~age+factor(stage),
approach = "mle",  data = larynx)
summary(fit)
fit$var
setwd("~/Documents/spsurv")
devtools::load_all()
devtools::document()
# devtools::install()
devtools::install(quick=TRUE)
usethis::use_build_ignore(".travis.yml")
usethis::use_build_ignore("_config.yml")
usethis::use_build_ignore("cran-comments.md")
usethis::use_build_ignore("inst/dev.R")
#devtools::build_vignettes()
devtools::check()
